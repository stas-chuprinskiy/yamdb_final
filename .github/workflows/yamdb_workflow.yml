name: API YaMDB workflow

on:
  push:
    branches:
    - master

jobs:
  app_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt

    - name: Test with flake8
      run:
        python3 -m flake8

    - name: Test with app tests
      run:
        pytest

  build:
    runs-on: ubuntu-latest
    needs: app_tests

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: api_yamdb/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest

  notify:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Send notification in telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} completed successfully!

# deploy:
#   runs-on: ubuntu-latest
#   needs: build

#   steps:
#   - name: Check out the repo
#     uses: actions/checkout@v3

#   - name: Copy docker-compose.yaml via ssh
#     uses: appleboy/scp-action@master
#     with:
#       host: ${{ secrets.HOST }}
#       username: ${{ secrets.USER }}
#       key: ${{ secrets.SSH_KEY }}
#       passphrase: ${{ secrets.PASSPHRASE }}
#       source: "infra/docker-compose.yaml"
#       target: "dev/yamdb_final"
#       strip_components: 1
#       overwrite: true

#   - name: Copy nginx settings via ssh
#     uses: appleboy/scp-action@master
#     with:
#       host: ${{ secrets.HOST }}
#       username: ${{ secrets.USER }}
#       key: ${{ secrets.SSH_KEY }}
#       passphrase: ${{ secrets.PASSPHRASE }}
#       source: "infra/nginx/default.conf"
#       target: "dev/yamdb_final/nginx"
#       strip_components: 2
#       overwrite: true

#   - name: Executing ssh commands to deploy
#     uses: appleboy/ssh-action@master
#     with:
#       host: ${{ secrets.HOST }}
#       username: ${{ secrets.USER }}
#       key: ${{ secrets.SSH_KEY }}
#       passphrase: ${{ secrets.PASSPHRASE }}
#       script: |
#         cd dev/yamdb_final

#         sudo docker-compose stop
#         sudo docker-compose rm web

#         echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} > .env
#         echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#         echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#         echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#         echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#         echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#         echo DB_PORT=${{ secrets.DB_PORT }} >> .env

#         sudo docker-compose up -d
